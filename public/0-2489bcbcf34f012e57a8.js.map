{"version":3,"sources":["webpack:///./node_modules/gatsby-link/index.js","webpack:///./node_modules/react-burger-menu/lib/menuFactory.js","webpack:///./node_modules/react-burger-menu/lib/BurgerMenu.js","webpack:///./node_modules/react-helmet/lib/Helmet.js","webpack:///./node_modules/react-burger-menu/lib/snapsvgImporter.js","webpack:///./node_modules/react-helmet/lib/HelmetConstants.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./node_modules/react-burger-menu/lib/menus/slide.js","webpack:///./node_modules/react-burger-menu/lib/baseStyles.js","webpack:///./node_modules/react-burger-menu/lib/BurgerIcon.js","webpack:///./node_modules/react-burger-menu/lib/CrossIcon.js","webpack:///./node_modules/react-burger-menu/lib/menus/stack.js","webpack:///./node_modules/react-burger-menu/lib/menus/elastic.js","webpack:///./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./node_modules/eve/eve.js","webpack:///./node_modules/react-burger-menu/lib/menus/bubble.js","webpack:///./node_modules/react-burger-menu/lib/menus/push.js","webpack:///./node_modules/react-burger-menu/lib/menus/pushRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/fallDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/reveal.js","webpack:///./node_modules/react-side-effect/lib/index.js","webpack:///./node_modules/exenv/index.js","webpack:///./node_modules/shallowequal/index.js","webpack:///./node_modules/deep-equal/index.js","webpack:///./node_modules/deep-equal/lib/keys.js","webpack:///./node_modules/deep-equal/lib/is_arguments.js","webpack:///./node_modules/react-helmet/lib/HelmetUtils.js"],"names":["_interopRequireDefault","__webpack_require__","exports","__esModule","withPrefix","navigateTo","replace","push","navigate","default","_objectWithoutPropertiesLoose2","_extends2","_inheritsLoose2","_assertThisInitialized2","_defineProperty2","_propTypes","_react","_router","_gatsby","path","normalizePath","NavLinkPropTypes","activeClassName","string","activeStyle","object","GatsbyLink","_React$Component","props","_this","call","this","_ref","isCurrent","className","filter","Boolean","join","style","IOSupported","window","IntersectionObserver","state","handleRef","bind","_proto","prototype","componentDidUpdate","prevProps","prevState","to","___loader","enqueue","parsePath","pathname","componentDidMount","ref","el","cb","io","_this2","innerRef","entries","forEach","entry","target","isIntersecting","intersectionRatio","unobserve","disconnect","observe","render","_this3","_this$props","_this$props$getProps","getProps","defaultGetProps","_onClick","onClick","_onMouseEnter","onMouseEnter","rest","prefixedTo","createElement","Link","e","hovering","button","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","preventDefault","Component","propTypes","func","isRequired","bool","_default","options","___navigate","console","warn","___push","___replace","Object","defineProperty","value","_extends","assign","i","arguments","length","source","key","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_get","_x3","_x4","_x5","_again","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","parent","getPrototypeOf","obj","_react2","_reactDom2","_propTypes2","_baseStyles2","_BurgerIcon2","_CrossIcon2","styles","Menu","_Component","instance","TypeError","_classCallCheck","isOpen","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_inherits","noStateChange","newState","applyWrapperStyles","setState","onStateChange","timeoutId","clearTimeout","setTimeout","set","bodyClassName","document","querySelector","classList","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","id","wrapperStyles","html","body","wrapper","getElementById","builtStyles","getStyle","prop","element","error","index","inline","propName","charAt","toUpperCase","output","width","formattedWidth","right","event","keyCode","toggleMenu","disableOverlayClick","Error","customOnKeyDown","onkeydown","disableCloseOnEsc","listenForClose","morphShape","svg","findDOMNode","lib","select","animate","attr","pathInitial","nextProps","noOverlay","overlayClassName","trim","shouldDisableOverlayClick","getStyles","morphShapeClassName","height","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","map","children","item","extraProps","itemClassName","cloneElement","customCrossIcon","customIcon","crossButtonClassName","crossClassName","customBurgerIcon","burgerButtonClassName","barClassName","burgerBarClassName","oneOfType","oneOf","number","defaultProps","module","slide","stack","elastic","bubble","pushRotate","scaleDown","scaleRotate","fallDown","reveal","Helmet","_reactSideEffect2","_deepEqual2","_HelmetUtils","_HelmetConstants","_objectWithoutProperties","keys","indexOf","_class","_temp","HelmetSideEffects","reducePropsToState","handleClientStateChange","mapStateOnServer","HelmetExport","HelmetWrapper","self","ReferenceError","_possibleConstructorReturn","apply","shouldComponentUpdate","mapNestedChildrenToProps","child","nestedChildren","type","TAG_NAMES","SCRIPT","NOSCRIPT","innerHTML","STYLE","cssText","flattenArrayTypeChildren","arrayTypeChildren","newChildProps","concat","mapObjectTypeChildren","_ref2","_extends3","_extends4","newProps","TITLE","titleAttributes","BODY","bodyAttributes","HTML","htmlAttributes","mapArrayTypeChildrenToProps","newFlattenedProps","arrayChildName","_extends5","warnOnInvalidChildren","mapChildrenToProps","_child$props","childProps","convertReactPropstoHtmlAttributes","LINK","META","_props","canUseDOM","base","arrayOf","node","defaultTitle","defer","encodeSpecialCharacters","link","meta","noscript","onChangeClientState","script","title","titleTemplate","peek","rewind","mappedState","baseTag","linkTags","metaTags","noscriptTags","scriptTags","styleTags","renderStatic","Snap","ATTRIBUTE_NAMES","BASE","HEAD","REACT_TAG_MAP","VALID_TAG_NAMES","name","TAG_PROPERTIES","CHARSET","CSS_TEXT","HREF","HTTPEQUIV","INNER_HTML","ITEM_PROP","NAME","PROPERTY","REL","SRC","accesskey","charset","class","contenteditable","contextmenu","http-equiv","itemprop","tabindex","HELMET_PROPS","DEFAULT_TITLE","DEFER","ENCODE_SPECIAL_CHARACTERS","ON_CHANGE_CLIENT_STATE","TITLE_TEMPLATE","HTML_TAG_MAP","reduce","SELF_CLOSING_TAGS","HELMET_ATTRIBUTE","excluded","sourceKeys","_menuFactory","_menuFactory2","overlay","position","zIndex","background","opacity","MozTransform","MsTransform","OTransform","WebkitTransform","transform","transition","menuWrap","menu","boxSizing","overflow","itemList","display","outline","_x","_x2","BurgerIcon","hover","left","top","icon","bmIcon","bar","getLineStyle","bmBurgerBars","bmBurgerButton","onMouseOver","onMouseOut","margin","padding","border","fontSize","cursor","CrossIcon","bmCross","getCrossStyle","bmCrossButton","color","nthChild","_snapsvgImporter2","pathOpen","mina","easeinout","whiteSpace","eve","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","Date","getTime","isArray","Array","a","toString","idgen","idprefix","timer","now","sta","val","s","ds","b","dur","B","speed","spd","duration","stopit","update","pause","pdif","resume","frame","res","start","j","jj","end","easing","timeStamp","len","A","anim","linear","status","stop","time","getById","n","easeout","Math","pow","easein","q","Q","sqrt","x","y","t","abs","backin","backout","sin","PI","bounce","p","root","w","h","nodeType","wrap","is","Element","glob","doc","String","Paper","version","_","win","tokenRegex","objNotationRegex","has","Str","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","E","round","objectToString","colourRegExp","commaSpaces","separator","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","xlink","xmlns","hub","url","$","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","isFinite","slice","cacher","f","scope","postprocessor","newf","arg","args","cache","count","array","ii","splice","repush","shift","rad","deg","format","str","all","quote","quotedName","isFunc","replacer","clone","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","r","g","hex","rgbtoString","toHex","red","green","blue","rgb","match","split","hsb2rgb","hsl2rgb","hsb","hsl","l","toFixed","getElementsByTagName","out","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","z","data","params","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","add","_unit2px","getSomeSVG","mgr","fill","appendChild","getW","getBBox","getH","nam","removeChild","contains","compareDocumentPosition","ownerSVGElement","add2group","list","childNodes","snap","paper","tagName","nodeName","anims","mask","pattern","symbol","method","Fragment","frag","make","defs","proto","ownerDocument","dom","contentDocument","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","firstDefined","json","att","parse","createDocumentFragment","full","div","firstChild","fragment","ch","toJSON","jsonFiller","on","nt","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","once","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elem","box","docElem","clientTop","clientLeft","elementFromPoint","opera","so","getBoundingClientRect","documentElement","pageYOffset","scrollTop","pageXOffset","scrollLeft","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","test","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","attrs","deurl","gradrg","setFontSize","getFontSize","tokens","stops","seed","step","k","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setter","textExtract","chi","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","pos","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","isNaN","bplus","from","rect","circle","preload","onerror","src","img","onload","image","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","items","bindings","setproto","thisArg","Animation","each","begin","handler","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","names","getEmpty","getViewBox","getColour","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","equaliseTransform","arr1","arr2","bUnit","supportsTouch","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","off","eventName","unbind","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","__WEBPACK_AMD_DEFINE_RESULT__","current_event","comaseparator","numsort","lastDefined","objtos","ar","oldstop","listeners","indexed","queue","ce","sort","_events","nes","es","sep","RegExp","exist","subname","cur","nts","inodes","funcs","prune","steps","stepsTotal","nextStep","closeButton","transformOrigin","transformStyle","perspective","perspectiveOrigin","burgerIcon","_interopDefault","ex","React","React__default","ExecutionEnvironment","shallowEqual","handleStateChangeOnClient","WrappedComponent","mountedInstances","emitChange","SideEffect","recordedState","componentWillMount","componentWillUnmount","displayName","getDisplayName","canUseWorkers","Worker","canUseEventListeners","attachEvent","canUseViewport","screen","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","idx","valueA","valueB","pSlice","objectKeys","isArguments","deepEqual","actual","expected","opts","strict","isUndefinedOrNull","isBuffer","ka","kb","objEquiv","copy","shim","supportsArgumentsClass","supported","unsupported","propertyIsEnumerable","_typeof","Symbol","iterator","_objectAssign2","clock","getTitleFromPropsList","propsList","innermostTitle","getInnermostProperty","innermostTemplate","innermostDefaultTitle","getOnChangeClientState","getAttributesFromPropsList","tagType","tagAttrs","current","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","tag","lowerCaseAttributeKey","getTagsFromPropsList","approvedSeenTags","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","attributeKey","tagUnion","rafPolyfill","currentTime","cafPolyfill","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msg","_helmetCallback","commitTagChanges","updateAttributes","updateTitle","tagUpdates","updateTags","addedTags","removedTags","_tagUpdates$tagType","newTags","oldTags","flattenArray","possibleArray","elementTag","helmetAttributeString","helmetAttributes","attributesToRemove","attributeKeys","attribute","indexToSave","_i","tags","headElement","head","tagNodes","indexToDelete","newElement","styleSheet","some","existingTag","isEqualNode","generateElementAttributesAsString","convertElementAttributestoReactProps","initProps","getMethodsForTag","encode","toComponent","_initProps","attributeString","flattenedTitle","generateTitleAsString","_mappedTag","mappedTag","mappedAttribute","content","dangerouslySetInnerHTML","__html","generateTagsAsReactComponent","attributeHtml","tagContent","isSelfClosing","generateTagsAsString","initAttributes","_ref$title"],"mappings":"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","file":"0-2489bcbcf34f012e57a8.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.withPrefix = withPrefix;\nexports.navigateTo = exports.replace = exports.push = exports.navigate = exports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"@reach/router\");\n\nvar _gatsby = require(\"gatsby\");\n\n/*global __PATH_PREFIX__ */\nfunction withPrefix(path) {\n  return normalizePath(__PATH_PREFIX__ + \"/\" + path);\n}\n\nfunction normalizePath(path) {\n  return path.replace(/\\/+/g, \"/\");\n}\n\nvar NavLinkPropTypes = {\n  activeClassName: _propTypes.default.string,\n  activeStyle: _propTypes.default.object // Set up IntersectionObserver\n\n};\n\nvar handleIntersection = function handleIntersection(el, cb) {\n  var io = new window.IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (el === entry.target) {\n        // Check if element is within viewport, remove listener, destroy observer, and run link callback.\n        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          io.unobserve(el);\n          io.disconnect();\n          cb();\n        }\n      }\n    });\n  }); // Add element to the observer\n\n  io.observe(el);\n};\n\nvar GatsbyLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(GatsbyLink, _React$Component);\n\n  function GatsbyLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this) || this; // Default to no support for IntersectionObserver\n\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"defaultGetProps\", function (_ref) {\n      var isCurrent = _ref.isCurrent;\n\n      if (isCurrent) {\n        return {\n          className: [_this.props.className, _this.props.activeClassName].filter(Boolean).join(\" \"),\n          style: (0, _extends2.default)({}, _this.props.style, _this.props.activeStyle)\n        };\n      }\n\n      return null;\n    });\n    var IOSupported = false;\n\n    if (typeof window !== \"undefined\" && window.IntersectionObserver) {\n      IOSupported = true;\n    }\n\n    _this.state = {\n      IOSupported: IOSupported\n    };\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = GatsbyLink.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // Preserve non IO functionality if no support\n    if (this.props.to !== prevProps.to && !this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Preserve non IO functionality if no support\n    if (!this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    this.props.innerRef && this.props.innerRef(ref);\n\n    if (this.state.IOSupported && ref) {\n      // If IO supported and element reference found, setup Observer functionality\n      handleIntersection(ref, function () {\n        ___loader.enqueue((0, _gatsby.parsePath)(_this2.props.to).pathname);\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props = this.props,\n        to = _this$props.to,\n        _this$props$getProps = _this$props.getProps,\n        getProps = _this$props$getProps === void 0 ? this.defaultGetProps : _this$props$getProps,\n        _onClick = _this$props.onClick,\n        _onMouseEnter = _this$props.onMouseEnter,\n        $activeClassName = _this$props.activeClassName,\n        $activeStyle = _this$props.activeStyle,\n        $ref = _this$props.ref,\n        $innerRef = _this$props.innerRef,\n        state = _this$props.state,\n        replace = _this$props.replace,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"to\", \"getProps\", \"onClick\", \"onMouseEnter\", \"activeClassName\", \"activeStyle\", \"ref\", \"innerRef\", \"state\", \"replace\"]);\n    var prefixedTo = withPrefix(to);\n    return _react.default.createElement(_router.Link, (0, _extends2.default)({\n      to: prefixedTo,\n      state: state,\n      getProps: getProps,\n      innerRef: this.handleRef,\n      onMouseEnter: function onMouseEnter(e) {\n        // eslint-disable-line\n        _onMouseEnter && _onMouseEnter(e);\n\n        ___loader.hovering((0, _gatsby.parsePath)(to).pathname);\n      },\n      onClick: function onClick(e) {\n        // eslint-disable-line\n        _onClick && _onClick(e);\n\n        if (e.button === 0 && // ignore right clicks\n        !_this3.props.target && // let browser handle \"target=_blank\"\n        !e.defaultPrevented && // onClick prevented default\n        !e.metaKey && // ignore clicks with modifier keys...\n        !e.altKey && !e.ctrlKey && !e.shiftKey) {\n          e.preventDefault(); // Make sure the necessary scripts and data are\n          // loaded before continuing.\n\n          navigate(to, {\n            state: state,\n            replace: replace\n          });\n        }\n\n        return true;\n      }\n    }, rest));\n  };\n\n  return GatsbyLink;\n}(_react.default.Component);\n\nGatsbyLink.propTypes = (0, _extends2.default)({}, NavLinkPropTypes, {\n  innerRef: _propTypes.default.func,\n  onClick: _propTypes.default.func,\n  to: _propTypes.default.string.isRequired,\n  replace: _propTypes.default.bool\n});\nvar _default = GatsbyLink;\nexports.default = _default;\n\nvar navigate = function navigate(to, options) {\n  window.___navigate(withPrefix(to), options);\n};\n\nexports.navigate = navigate;\n\nvar push = function push(to) {\n  console.warn(\"The \\\"push\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___push(withPrefix(to));\n};\n\nexports.push = push;\n\nvar replace = function replace(to) {\n  console.warn(\"The \\\"replace\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___replace(withPrefix(to));\n}; // TODO: Remove navigateTo for Gatsby v3\n\n\nexports.replace = replace;\n\nvar navigateTo = function navigateTo(to) {\n  console.warn(\"The \\\"navigateTo\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n  return push(to);\n};\n\nexports.navigateTo = navigateTo;","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = (function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n      this.state = {\n        isOpen: false\n      };\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n\n        this.applyWrapperStyles();\n\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          // Timeout ensures wrappers are cleared after animation finishes.\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      }\n\n      // Applies component-specific styles to external wrapper elements.\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        if (this.props.bodyClassName) {\n          var body = document.querySelector('body');\n          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      }\n\n      // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var html = document.querySelector('html');\n        var body = document.querySelector('body');\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        }\n\n        // Prevent any horizontal scroll.\n        [html, body].forEach(function (element) {\n          element.style['overflow-x'] = set ? 'hidden' : '';\n        });\n      }\n\n      // Builds styles incrementally for a given element.\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n        // Set base styles.\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\n        // Add animation-specific styles.\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        }\n\n        // Add custom styles.\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        }\n\n        // Add element inline styles.\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        if (!styles) {\n          throw new Error('No styles supplied');\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless disabled or custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else if (!this.props.disableCloseOnEsc) {\n          window.onkeydown = this.listenForClose.bind(this);\n        }\n\n        // Allow initial open state to be set by props.\n        if (this.props.isOpen) {\n          this.toggleMenu({ isOpen: true, noStateChange: true });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement(\n          'div',\n          null,\n          !this.props.noOverlay && _react2['default'].createElement('div', {\n            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n            onClick: function () {\n              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n            },\n            style: this.getStyles('overlay')\n          }),\n          _react2['default'].createElement(\n            'div',\n            {\n              id: this.props.id,\n              className: ('bm-menu-wrap ' + this.props.className).trim(),\n              style: this.getStyles('menuWrap')\n            },\n            styles.svg && _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n                style: this.getStyles('morphShape')\n              },\n              _react2['default'].createElement(\n                'svg',\n                {\n                  width: '100%',\n                  height: '100%',\n                  viewBox: '0 0 100 800',\n                  preserveAspectRatio: 'none'\n                },\n                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n              )\n            ),\n            _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-menu ' + this.props.menuClassName).trim(),\n                style: this.getStyles('menu')\n              },\n              _react2['default'].createElement(\n                'nav',\n                {\n                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n                  style: this.getStyles('itemList')\n                },\n                _react2['default'].Children.map(this.props.children, function (item, index) {\n                  if (item) {\n                    var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n                      return !!className;\n                    }).join(' ');\n                    var extraProps = {\n                      key: index,\n                      className: classList,\n                      style: _this3.getStyles('item', index, item.props.style)\n                    };\n                    return _react2['default'].cloneElement(item, extraProps);\n                  }\n                })\n              )\n            ),\n            this.props.customCrossIcon !== false && _react2['default'].createElement(\n              'div',\n              { style: this.getStyles('closeButton') },\n              _react2['default'].createElement(_CrossIcon2['default'], {\n                onClick: function () {\n                  return _this3.toggleMenu();\n                },\n                styles: this.props.styles,\n                customIcon: this.props.customCrossIcon,\n                className: this.props.crossButtonClassName,\n                crossClassName: this.props.crossClassName\n              })\n            )\n          ),\n          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n            'div',\n            { style: this.getStyles('burgerIcon') },\n            _react2['default'].createElement(_BurgerIcon2['default'], {\n              onClick: function () {\n                return _this3.toggleMenu();\n              },\n              styles: this.props.styles,\n              customIcon: this.props.customBurgerIcon,\n              className: this.props.burgerButtonClassName,\n              barClassName: this.props.burgerBarClassName\n            })\n          )\n        );\n      }\n    }]);\n\n    return Menu;\n  })(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableCloseOnEsc: false,\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n\n  return Menu;\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];","exports.__esModule = true;\nexports.Helmet = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactSideEffect = require(\"react-side-effect\");\n\nvar _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);\n\nvar _deepEqual = require(\"deep-equal\");\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _HelmetUtils = require(\"./HelmetUtils.js\");\n\nvar _HelmetConstants = require(\"./HelmetConstants.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Helmet = function Helmet(Component) {\n    var _class, _temp;\n\n    return _temp = _class = function (_React$Component) {\n        _inherits(HelmetWrapper, _React$Component);\n\n        function HelmetWrapper() {\n            _classCallCheck(this, HelmetWrapper);\n\n            return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n        }\n\n        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n            return !(0, _deepEqual2.default)(this.props, nextProps);\n        };\n\n        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {\n            if (!nestedChildren) {\n                return null;\n            }\n\n            switch (child.type) {\n                case _HelmetConstants.TAG_NAMES.SCRIPT:\n                case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n                    return {\n                        innerHTML: nestedChildren\n                    };\n\n                case _HelmetConstants.TAG_NAMES.STYLE:\n                    return {\n                        cssText: nestedChildren\n                    };\n            }\n\n            throw new Error(\"<\" + child.type + \" /> elements are self-closing and can not contain children. Refer to our API for more information.\");\n        };\n\n        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {\n            var _extends2;\n\n            var child = _ref.child,\n                arrayTypeChildren = _ref.arrayTypeChildren,\n                newChildProps = _ref.newChildProps,\n                nestedChildren = _ref.nestedChildren;\n\n            return _extends({}, arrayTypeChildren, (_extends2 = {}, _extends2[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _extends2));\n        };\n\n        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {\n            var _extends3, _extends4;\n\n            var child = _ref2.child,\n                newProps = _ref2.newProps,\n                newChildProps = _ref2.newChildProps,\n                nestedChildren = _ref2.nestedChildren;\n\n            switch (child.type) {\n                case _HelmetConstants.TAG_NAMES.TITLE:\n                    return _extends({}, newProps, (_extends3 = {}, _extends3[child.type] = nestedChildren, _extends3.titleAttributes = _extends({}, newChildProps), _extends3));\n\n                case _HelmetConstants.TAG_NAMES.BODY:\n                    return _extends({}, newProps, {\n                        bodyAttributes: _extends({}, newChildProps)\n                    });\n\n                case _HelmetConstants.TAG_NAMES.HTML:\n                    return _extends({}, newProps, {\n                        htmlAttributes: _extends({}, newChildProps)\n                    });\n            }\n\n            return _extends({}, newProps, (_extends4 = {}, _extends4[child.type] = _extends({}, newChildProps), _extends4));\n        };\n\n        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n            var newFlattenedProps = _extends({}, newProps);\n\n            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {\n                var _extends5;\n\n                newFlattenedProps = _extends({}, newFlattenedProps, (_extends5 = {}, _extends5[arrayChildName] = arrayTypeChildren[arrayChildName], _extends5));\n            });\n\n            return newFlattenedProps;\n        };\n\n        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!_HelmetConstants.VALID_TAG_NAMES.some(function (name) {\n                    return child.type === name;\n                })) {\n                    if (typeof child.type === \"function\") {\n                        return (0, _HelmetUtils.warn)(\"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.\");\n                    }\n\n                    return (0, _HelmetUtils.warn)(\"Only elements types \" + _HelmetConstants.VALID_TAG_NAMES.join(\", \") + \" are allowed. Helmet does not support rendering <\" + child.type + \"> elements. Refer to our API for more information.\");\n                }\n\n                if (nestedChildren && typeof nestedChildren !== \"string\" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {\n                    return typeof nestedChild !== \"string\";\n                }))) {\n                    throw new Error(\"Helmet expects a string as a child of <\" + child.type + \">. Did you forget to wrap your children in braces? ( <\" + child.type + \">{``}</\" + child.type + \"> ) Refer to our API for more information.\");\n                }\n            }\n\n            return true;\n        };\n\n        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {\n            var _this2 = this;\n\n            var arrayTypeChildren = {};\n\n            _react2.default.Children.forEach(children, function (child) {\n                if (!child || !child.props) {\n                    return;\n                }\n\n                var _child$props = child.props,\n                    nestedChildren = _child$props.children,\n                    childProps = _objectWithoutProperties(_child$props, [\"children\"]);\n\n                var newChildProps = (0, _HelmetUtils.convertReactPropstoHtmlAttributes)(childProps);\n\n                _this2.warnOnInvalidChildren(child, nestedChildren);\n\n                switch (child.type) {\n                    case _HelmetConstants.TAG_NAMES.LINK:\n                    case _HelmetConstants.TAG_NAMES.META:\n                    case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n                    case _HelmetConstants.TAG_NAMES.SCRIPT:\n                    case _HelmetConstants.TAG_NAMES.STYLE:\n                        arrayTypeChildren = _this2.flattenArrayTypeChildren({\n                            child: child,\n                            arrayTypeChildren: arrayTypeChildren,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n\n                    default:\n                        newProps = _this2.mapObjectTypeChildren({\n                            child: child,\n                            newProps: newProps,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n                }\n            });\n\n            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n            return newProps;\n        };\n\n        HelmetWrapper.prototype.render = function render() {\n            var _props = this.props,\n                children = _props.children,\n                props = _objectWithoutProperties(_props, [\"children\"]);\n\n            var newProps = _extends({}, props);\n\n            if (children) {\n                newProps = this.mapChildrenToProps(children, newProps);\n            }\n\n            return _react2.default.createElement(Component, newProps);\n        };\n\n        _createClass(HelmetWrapper, null, [{\n            key: \"canUseDOM\",\n\n\n            // Component.peek comes from react-side-effect:\n            // For testing, you may use a static peek() method available on the returned component.\n            // It lets you get the current state without resetting the mounted instance stack.\n            // Don’t use it for anything other than testing.\n\n            /**\n            * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n            * @param {Object} bodyAttributes: {\"className\": \"root\"}\n            * @param {String} defaultTitle: \"Default Title\"\n            * @param {Boolean} defer: true\n            * @param {Boolean} encodeSpecialCharacters: true\n            * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n            * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n            * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n            * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n            * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n            * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n            * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n            * @param {String} title: \"Title\"\n            * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n            * @param {String} titleTemplate: \"MySite.com - %s\"\n            */\n            set: function set(canUseDOM) {\n                Component.canUseDOM = canUseDOM;\n            }\n        }]);\n\n        return HelmetWrapper;\n    }(_react2.default.Component), _class.propTypes = {\n        base: _propTypes2.default.object,\n        bodyAttributes: _propTypes2.default.object,\n        children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),\n        defaultTitle: _propTypes2.default.string,\n        defer: _propTypes2.default.bool,\n        encodeSpecialCharacters: _propTypes2.default.bool,\n        htmlAttributes: _propTypes2.default.object,\n        link: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        meta: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        noscript: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        onChangeClientState: _propTypes2.default.func,\n        script: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        style: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        title: _propTypes2.default.string,\n        titleAttributes: _propTypes2.default.object,\n        titleTemplate: _propTypes2.default.string\n    }, _class.defaultProps = {\n        defer: true,\n        encodeSpecialCharacters: true\n    }, _class.peek = Component.peek, _class.rewind = function () {\n        var mappedState = Component.rewind();\n        if (!mappedState) {\n            // provide fallback if mappedState is undefined\n            mappedState = (0, _HelmetUtils.mapStateOnServer)({\n                baseTag: [],\n                bodyAttributes: {},\n                encodeSpecialCharacters: true,\n                htmlAttributes: {},\n                linkTags: [],\n                metaTags: [],\n                noscriptTags: [],\n                scriptTags: [],\n                styleTags: [],\n                title: \"\",\n                titleAttributes: {}\n            });\n        }\n\n        return mappedState;\n    }, _temp;\n};\n\nvar NullComponent = function NullComponent() {\n    return null;\n};\n\nvar HelmetSideEffects = (0, _reactSideEffect2.default)(_HelmetUtils.reducePropsToState, _HelmetUtils.handleClientStateChange, _HelmetUtils.mapStateOnServer)(NullComponent);\n\nvar HelmetExport = Helmet(HelmetSideEffects);\nHelmetExport.renderStatic = HelmetExport.rewind;\n\nexports.Helmet = HelmetExport;\nexports.default = HelmetExport;","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];","exports.__esModule = true;\nvar ATTRIBUTE_NAMES = exports.ATTRIBUTE_NAMES = {\n    BODY: \"bodyAttributes\",\n    HTML: \"htmlAttributes\",\n    TITLE: \"titleAttributes\"\n};\n\nvar TAG_NAMES = exports.TAG_NAMES = {\n    BASE: \"base\",\n    BODY: \"body\",\n    HEAD: \"head\",\n    HTML: \"html\",\n    LINK: \"link\",\n    META: \"meta\",\n    NOSCRIPT: \"noscript\",\n    SCRIPT: \"script\",\n    STYLE: \"style\",\n    TITLE: \"title\"\n};\n\nvar VALID_TAG_NAMES = exports.VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {\n    return TAG_NAMES[name];\n});\n\nvar TAG_PROPERTIES = exports.TAG_PROPERTIES = {\n    CHARSET: \"charset\",\n    CSS_TEXT: \"cssText\",\n    HREF: \"href\",\n    HTTPEQUIV: \"http-equiv\",\n    INNER_HTML: \"innerHTML\",\n    ITEM_PROP: \"itemprop\",\n    NAME: \"name\",\n    PROPERTY: \"property\",\n    REL: \"rel\",\n    SRC: \"src\"\n};\n\nvar REACT_TAG_MAP = exports.REACT_TAG_MAP = {\n    accesskey: \"accessKey\",\n    charset: \"charSet\",\n    class: \"className\",\n    contenteditable: \"contentEditable\",\n    contextmenu: \"contextMenu\",\n    \"http-equiv\": \"httpEquiv\",\n    itemprop: \"itemProp\",\n    tabindex: \"tabIndex\"\n};\n\nvar HELMET_PROPS = exports.HELMET_PROPS = {\n    DEFAULT_TITLE: \"defaultTitle\",\n    DEFER: \"defer\",\n    ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n    ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n    TITLE_TEMPLATE: \"titleTemplate\"\n};\n\nvar HTML_TAG_MAP = exports.HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {\n    obj[REACT_TAG_MAP[key]] = key;\n    return obj;\n}, {});\n\nvar SELF_CLOSING_TAGS = exports.SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];\n\nvar HELMET_ATTRIBUTE = exports.HELMET_ATTRIBUTE = \"data-react-helmet\";","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item: function item() {\n    return {\n      display: 'block',\n      outline: 'none'\n    };\n  }\n};\n\nexports['default'] = styles;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = (function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return {\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        opacity: 0,\n        fontSize: 8,\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-icon',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          null,\n          [0, 1, 2].map(function (bar) {\n            return _react2['default'].createElement('span', {\n              key: bar,\n              className: ('bm-burger-bars ' + _this.props.barClassName).trim(),\n              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-burger-button ' + this.props.className).trim(),\n          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            onMouseOver: function () {\n              return _this.setState({ hover: true });\n            },\n            onMouseOut: function () {\n              return _this.setState({ hover: false });\n            },\n            style: buttonStyle\n          },\n          'Open Menu'\n        )\n      );\n    }\n  }]);\n\n  return BurgerIcon;\n})(_react.Component);\n\nexports['default'] = BurgerIcon;\n\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = (function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        color: 'transparent',\n        outline: 'none',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-cross',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          { style: { position: 'absolute', top: '6px', right: '14px' } },\n          ['before', 'after'].map(function (type, i) {\n            return _react2['default'].createElement('span', {\n              key: i,\n              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-cross-button ' + this.props.className).trim(),\n          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          { onClick: this.props.onClick, style: buttonStyle },\n          'Close Menu'\n        )\n      );\n    }\n  }]);\n\n  return CrossIcon;\n})(_react.Component);\n\nexports['default'] = CrossIcon;\n\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n\n        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar ExecutionEnvironment = _interopDefault(require('exenv'));\nvar shallowEqual = _interopDefault(require('shallowequal'));\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {\n  if (typeof reducePropsToState !== 'function') {\n    throw new Error('Expected reducePropsToState to be a function.');\n  }\n  if (typeof handleStateChangeOnClient !== 'function') {\n    throw new Error('Expected handleStateChangeOnClient to be a function.');\n  }\n  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {\n    throw new Error('Expected mapStateOnServer to either be undefined or a function.');\n  }\n\n  function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrap(WrappedComponent) {\n    if (typeof WrappedComponent !== 'function') {\n      throw new Error('Expected WrappedComponent to be a React component.');\n    }\n\n    var mountedInstances = [];\n    var state = void 0;\n\n    function emitChange() {\n      state = reducePropsToState(mountedInstances.map(function (instance) {\n        return instance.props;\n      }));\n\n      if (SideEffect.canUseDOM) {\n        handleStateChangeOnClient(state);\n      } else if (mapStateOnServer) {\n        state = mapStateOnServer(state);\n      }\n    }\n\n    var SideEffect = function (_Component) {\n      _inherits(SideEffect, _Component);\n\n      function SideEffect() {\n        _classCallCheck(this, SideEffect);\n\n        return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n      }\n\n      // Try to use displayName of wrapped component\n      SideEffect.peek = function peek() {\n        return state;\n      };\n\n      // Expose canUseDOM so tests can monkeypatch it\n\n\n      SideEffect.rewind = function rewind() {\n        if (SideEffect.canUseDOM) {\n          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');\n        }\n\n        var recordedState = state;\n        state = undefined;\n        mountedInstances = [];\n        return recordedState;\n      };\n\n      SideEffect.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return !shallowEqual(nextProps, this.props);\n      };\n\n      SideEffect.prototype.componentWillMount = function componentWillMount() {\n        mountedInstances.push(this);\n        emitChange();\n      };\n\n      SideEffect.prototype.componentDidUpdate = function componentDidUpdate() {\n        emitChange();\n      };\n\n      SideEffect.prototype.componentWillUnmount = function componentWillUnmount() {\n        var index = mountedInstances.indexOf(this);\n        mountedInstances.splice(index, 1);\n        emitChange();\n      };\n\n      SideEffect.prototype.render = function render() {\n        return React__default.createElement(WrappedComponent, this.props);\n      };\n\n      return SideEffect;\n    }(React.Component);\n\n    SideEffect.displayName = 'SideEffect(' + getDisplayName(WrappedComponent) + ')';\n    SideEffect.canUseDOM = ExecutionEnvironment.canUseDOM;\n\n\n    return SideEffect;\n  };\n}\n\nmodule.exports = withSideEffect;\n","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports.__esModule = true;\nexports.warn = exports.requestAnimationFrame = exports.reducePropsToState = exports.mapStateOnServer = exports.handleClientStateChange = exports.convertReactPropstoHtmlAttributes = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _objectAssign = require(\"object-assign\");\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _HelmetConstants = require(\"./HelmetConstants.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar encodeSpecialCharacters = function encodeSpecialCharacters(str) {\n    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (encode === false) {\n        return String(str);\n    }\n\n    return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\n\nvar getTitleFromPropsList = function getTitleFromPropsList(propsList) {\n    var innermostTitle = getInnermostProperty(propsList, _HelmetConstants.TAG_NAMES.TITLE);\n    var innermostTemplate = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.TITLE_TEMPLATE);\n\n    if (innermostTemplate && innermostTitle) {\n        // use function arg to avoid need to escape $ characters\n        return innermostTemplate.replace(/%s/g, function () {\n            return innermostTitle;\n        });\n    }\n\n    var innermostDefaultTitle = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFAULT_TITLE);\n\n    return innermostTitle || innermostDefaultTitle || undefined;\n};\n\nvar getOnChangeClientState = function getOnChangeClientState(propsList) {\n    return getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};\n};\n\nvar getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[tagType] !== \"undefined\";\n    }).map(function (props) {\n        return props[tagType];\n    }).reduce(function (tagAttrs, current) {\n        return _extends({}, tagAttrs, current);\n    }, {});\n};\n\nvar getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[_HelmetConstants.TAG_NAMES.BASE] !== \"undefined\";\n    }).map(function (props) {\n        return props[_HelmetConstants.TAG_NAMES.BASE];\n    }).reverse().reduce(function (innermostBaseTag, tag) {\n        if (!innermostBaseTag.length) {\n            var keys = Object.keys(tag);\n\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n                    return innermostBaseTag.concat(tag);\n                }\n            }\n        }\n\n        return innermostBaseTag;\n    }, []);\n};\n\nvar getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {\n    // Calculate list of tags, giving priority innermost component (end of the propslist)\n    var approvedSeenTags = {};\n\n    return propsList.filter(function (props) {\n        if (Array.isArray(props[tagName])) {\n            return true;\n        }\n        if (typeof props[tagName] !== \"undefined\") {\n            warn(\"Helmet: \" + tagName + \" should be of type \\\"Array\\\". Instead found type \\\"\" + _typeof(props[tagName]) + \"\\\"\");\n        }\n        return false;\n    }).map(function (props) {\n        return props[tagName];\n    }).reverse().reduce(function (approvedTags, instanceTags) {\n        var instanceSeenTags = {};\n\n        instanceTags.filter(function (tag) {\n            var primaryAttributeKey = void 0;\n            var keys = Object.keys(tag);\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n                    primaryAttributeKey = lowerCaseAttributeKey;\n                }\n                // Special case for innerHTML which doesn't work lowercased\n                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT || attributeKey === _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)) {\n                    primaryAttributeKey = attributeKey;\n                }\n            }\n\n            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n                return false;\n            }\n\n            var value = tag[primaryAttributeKey].toLowerCase();\n\n            if (!approvedSeenTags[primaryAttributeKey]) {\n                approvedSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!instanceSeenTags[primaryAttributeKey]) {\n                instanceSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!approvedSeenTags[primaryAttributeKey][value]) {\n                instanceSeenTags[primaryAttributeKey][value] = true;\n                return true;\n            }\n\n            return false;\n        }).reverse().forEach(function (tag) {\n            return approvedTags.push(tag);\n        });\n\n        // Update seen tags with tags from this instance\n        var keys = Object.keys(instanceSeenTags);\n        for (var i = 0; i < keys.length; i++) {\n            var attributeKey = keys[i];\n            var tagUnion = (0, _objectAssign2.default)({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);\n\n            approvedSeenTags[attributeKey] = tagUnion;\n        }\n\n        return approvedTags;\n    }, []).reverse();\n};\n\nvar getInnermostProperty = function getInnermostProperty(propsList, property) {\n    for (var i = propsList.length - 1; i >= 0; i--) {\n        var props = propsList[i];\n\n        if (props.hasOwnProperty(property)) {\n            return props[property];\n        }\n    }\n\n    return null;\n};\n\nvar reducePropsToState = function reducePropsToState(propsList) {\n    return {\n        baseTag: getBaseTagFromPropsList([_HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n        bodyAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.BODY, propsList),\n        defer: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFER),\n        encode: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n        htmlAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.HTML, propsList),\n        linkTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.LINK, [_HelmetConstants.TAG_PROPERTIES.REL, _HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n        metaTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.META, [_HelmetConstants.TAG_PROPERTIES.NAME, _HelmetConstants.TAG_PROPERTIES.CHARSET, _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstants.TAG_PROPERTIES.PROPERTY, _HelmetConstants.TAG_PROPERTIES.ITEM_PROP], propsList),\n        noscriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.NOSCRIPT, [_HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n        onChangeClientState: getOnChangeClientState(propsList),\n        scriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.SCRIPT, [_HelmetConstants.TAG_PROPERTIES.SRC, _HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n        styleTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.STYLE, [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT], propsList),\n        title: getTitleFromPropsList(propsList),\n        titleAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.TITLE, propsList)\n    };\n};\n\nvar rafPolyfill = function () {\n    var clock = Date.now();\n\n    return function (callback) {\n        var currentTime = Date.now();\n\n        if (currentTime - clock > 16) {\n            clock = currentTime;\n            callback(currentTime);\n        } else {\n            setTimeout(function () {\n                rafPolyfill(callback);\n            }, 0);\n        }\n    };\n}();\n\nvar cafPolyfill = function cafPolyfill(id) {\n    return clearTimeout(id);\n};\n\nvar requestAnimationFrame = typeof window !== \"undefined\" ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;\n\nvar cancelAnimationFrame = typeof window !== \"undefined\" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;\n\nvar warn = function warn(msg) {\n    return console && typeof console.warn === \"function\" && console.warn(msg);\n};\n\nvar _helmetCallback = null;\n\nvar handleClientStateChange = function handleClientStateChange(newState) {\n    if (_helmetCallback) {\n        cancelAnimationFrame(_helmetCallback);\n    }\n\n    if (newState.defer) {\n        _helmetCallback = requestAnimationFrame(function () {\n            commitTagChanges(newState, function () {\n                _helmetCallback = null;\n            });\n        });\n    } else {\n        commitTagChanges(newState);\n        _helmetCallback = null;\n    }\n};\n\nvar commitTagChanges = function commitTagChanges(newState, cb) {\n    var baseTag = newState.baseTag,\n        bodyAttributes = newState.bodyAttributes,\n        htmlAttributes = newState.htmlAttributes,\n        linkTags = newState.linkTags,\n        metaTags = newState.metaTags,\n        noscriptTags = newState.noscriptTags,\n        onChangeClientState = newState.onChangeClientState,\n        scriptTags = newState.scriptTags,\n        styleTags = newState.styleTags,\n        title = newState.title,\n        titleAttributes = newState.titleAttributes;\n\n    updateAttributes(_HelmetConstants.TAG_NAMES.BODY, bodyAttributes);\n    updateAttributes(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes);\n\n    updateTitle(title, titleAttributes);\n\n    var tagUpdates = {\n        baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),\n        linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),\n        metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),\n        noscriptTags: updateTags(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),\n        scriptTags: updateTags(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),\n        styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags)\n    };\n\n    var addedTags = {};\n    var removedTags = {};\n\n    Object.keys(tagUpdates).forEach(function (tagType) {\n        var _tagUpdates$tagType = tagUpdates[tagType],\n            newTags = _tagUpdates$tagType.newTags,\n            oldTags = _tagUpdates$tagType.oldTags;\n\n\n        if (newTags.length) {\n            addedTags[tagType] = newTags;\n        }\n        if (oldTags.length) {\n            removedTags[tagType] = tagUpdates[tagType].oldTags;\n        }\n    });\n\n    cb && cb();\n\n    onChangeClientState(newState, addedTags, removedTags);\n};\n\nvar flattenArray = function flattenArray(possibleArray) {\n    return Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\n};\n\nvar updateTitle = function updateTitle(title, attributes) {\n    if (typeof title !== \"undefined\" && document.title !== title) {\n        document.title = flattenArray(title);\n    }\n\n    updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);\n};\n\nvar updateAttributes = function updateAttributes(tagName, attributes) {\n    var elementTag = document.getElementsByTagName(tagName)[0];\n\n    if (!elementTag) {\n        return;\n    }\n\n    var helmetAttributeString = elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n    var attributesToRemove = [].concat(helmetAttributes);\n    var attributeKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attributeKeys.length; i++) {\n        var attribute = attributeKeys[i];\n        var value = attributes[attribute] || \"\";\n\n        if (elementTag.getAttribute(attribute) !== value) {\n            elementTag.setAttribute(attribute, value);\n        }\n\n        if (helmetAttributes.indexOf(attribute) === -1) {\n            helmetAttributes.push(attribute);\n        }\n\n        var indexToSave = attributesToRemove.indexOf(attribute);\n        if (indexToSave !== -1) {\n            attributesToRemove.splice(indexToSave, 1);\n        }\n    }\n\n    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {\n        elementTag.removeAttribute(attributesToRemove[_i]);\n    }\n\n    if (helmetAttributes.length === attributesToRemove.length) {\n        elementTag.removeAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n    } else if (elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n        elementTag.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n    }\n};\n\nvar updateTags = function updateTags(type, tags) {\n    var headElement = document.head || document.querySelector(_HelmetConstants.TAG_NAMES.HEAD);\n    var tagNodes = headElement.querySelectorAll(type + \"[\" + _HelmetConstants.HELMET_ATTRIBUTE + \"]\");\n    var oldTags = Array.prototype.slice.call(tagNodes);\n    var newTags = [];\n    var indexToDelete = void 0;\n\n    if (tags && tags.length) {\n        tags.forEach(function (tag) {\n            var newElement = document.createElement(type);\n\n            for (var attribute in tag) {\n                if (tag.hasOwnProperty(attribute)) {\n                    if (attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML) {\n                        newElement.innerHTML = tag.innerHTML;\n                    } else if (attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n                        if (newElement.styleSheet) {\n                            newElement.styleSheet.cssText = tag.cssText;\n                        } else {\n                            newElement.appendChild(document.createTextNode(tag.cssText));\n                        }\n                    } else {\n                        var value = typeof tag[attribute] === \"undefined\" ? \"\" : tag[attribute];\n                        newElement.setAttribute(attribute, value);\n                    }\n                }\n            }\n\n            newElement.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, \"true\");\n\n            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n            if (oldTags.some(function (existingTag, index) {\n                indexToDelete = index;\n                return newElement.isEqualNode(existingTag);\n            })) {\n                oldTags.splice(indexToDelete, 1);\n            } else {\n                newTags.push(newElement);\n            }\n        });\n    }\n\n    oldTags.forEach(function (tag) {\n        return tag.parentNode.removeChild(tag);\n    });\n    newTags.forEach(function (tag) {\n        return headElement.appendChild(tag);\n    });\n\n    return {\n        oldTags: oldTags,\n        newTags: newTags\n    };\n};\n\nvar generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {\n    return Object.keys(attributes).reduce(function (str, key) {\n        var attr = typeof attributes[key] !== \"undefined\" ? key + \"=\\\"\" + attributes[key] + \"\\\"\" : \"\" + key;\n        return str ? str + \" \" + attr : attr;\n    }, \"\");\n};\n\nvar generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {\n    var attributeString = generateElementAttributesAsString(attributes);\n    var flattenedTitle = flattenArray(title);\n    return attributeString ? \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeString + \">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\" : \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\";\n};\n\nvar generateTagsAsString = function generateTagsAsString(type, tags, encode) {\n    return tags.reduce(function (str, tag) {\n        var attributeHtml = Object.keys(tag).filter(function (attribute) {\n            return !(attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT);\n        }).reduce(function (string, attribute) {\n            var attr = typeof tag[attribute] === \"undefined\" ? attribute : attribute + \"=\\\"\" + encodeSpecialCharacters(tag[attribute], encode) + \"\\\"\";\n            return string ? string + \" \" + attr : attr;\n        }, \"\");\n\n        var tagContent = tag.innerHTML || tag.cssText || \"\";\n\n        var isSelfClosing = _HelmetConstants.SELF_CLOSING_TAGS.indexOf(type) === -1;\n\n        return str + \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeHtml + (isSelfClosing ? \"/>\" : \">\" + tagContent + \"</\" + type + \">\");\n    }, \"\");\n};\n\nvar convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {\n    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(attributes).reduce(function (obj, key) {\n        obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];\n        return obj;\n    }, initProps);\n};\n\nvar convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {\n    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(props).reduce(function (obj, key) {\n        obj[_HelmetConstants.HTML_TAG_MAP[key] || key] = props[key];\n        return obj;\n    }, initAttributes);\n};\n\nvar generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {\n    var _initProps;\n\n    // assigning into an array to define toString function on it\n    var initProps = (_initProps = {\n        key: title\n    }, _initProps[_HelmetConstants.HELMET_ATTRIBUTE] = true, _initProps);\n    var props = convertElementAttributestoReactProps(attributes, initProps);\n\n    return [_react2.default.createElement(_HelmetConstants.TAG_NAMES.TITLE, props, title)];\n};\n\nvar generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {\n    return tags.map(function (tag, i) {\n        var _mappedTag;\n\n        var mappedTag = (_mappedTag = {\n            key: i\n        }, _mappedTag[_HelmetConstants.HELMET_ATTRIBUTE] = true, _mappedTag);\n\n        Object.keys(tag).forEach(function (attribute) {\n            var mappedAttribute = _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;\n\n            if (mappedAttribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || mappedAttribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n                var content = tag.innerHTML || tag.cssText;\n                mappedTag.dangerouslySetInnerHTML = { __html: content };\n            } else {\n                mappedTag[mappedAttribute] = tag[attribute];\n            }\n        });\n\n        return _react2.default.createElement(type, mappedTag);\n    });\n};\n\nvar getMethodsForTag = function getMethodsForTag(type, tags, encode) {\n    switch (type) {\n        case _HelmetConstants.TAG_NAMES.TITLE:\n            return {\n                toComponent: function toComponent() {\n                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);\n                },\n                toString: function toString() {\n                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);\n                }\n            };\n        case _HelmetConstants.ATTRIBUTE_NAMES.BODY:\n        case _HelmetConstants.ATTRIBUTE_NAMES.HTML:\n            return {\n                toComponent: function toComponent() {\n                    return convertElementAttributestoReactProps(tags);\n                },\n                toString: function toString() {\n                    return generateElementAttributesAsString(tags);\n                }\n            };\n        default:\n            return {\n                toComponent: function toComponent() {\n                    return generateTagsAsReactComponent(type, tags);\n                },\n                toString: function toString() {\n                    return generateTagsAsString(type, tags, encode);\n                }\n            };\n    }\n};\n\nvar mapStateOnServer = function mapStateOnServer(_ref) {\n    var baseTag = _ref.baseTag,\n        bodyAttributes = _ref.bodyAttributes,\n        encode = _ref.encode,\n        htmlAttributes = _ref.htmlAttributes,\n        linkTags = _ref.linkTags,\n        metaTags = _ref.metaTags,\n        noscriptTags = _ref.noscriptTags,\n        scriptTags = _ref.scriptTags,\n        styleTags = _ref.styleTags,\n        _ref$title = _ref.title,\n        title = _ref$title === undefined ? \"\" : _ref$title,\n        titleAttributes = _ref.titleAttributes;\n    return {\n        base: getMethodsForTag(_HelmetConstants.TAG_NAMES.BASE, baseTag, encode),\n        bodyAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),\n        htmlAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),\n        link: getMethodsForTag(_HelmetConstants.TAG_NAMES.LINK, linkTags, encode),\n        meta: getMethodsForTag(_HelmetConstants.TAG_NAMES.META, metaTags, encode),\n        noscript: getMethodsForTag(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n        script: getMethodsForTag(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags, encode),\n        style: getMethodsForTag(_HelmetConstants.TAG_NAMES.STYLE, styleTags, encode),\n        title: getMethodsForTag(_HelmetConstants.TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)\n    };\n};\n\nexports.convertReactPropstoHtmlAttributes = convertReactPropstoHtmlAttributes;\nexports.handleClientStateChange = handleClientStateChange;\nexports.mapStateOnServer = mapStateOnServer;\nexports.reducePropsToState = reducePropsToState;\nexports.requestAnimationFrame = requestAnimationFrame;\nexports.warn = warn;"],"sourceRoot":""}